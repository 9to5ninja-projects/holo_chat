name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install development dependencies
      run: |
        pip install ruff black isort pytest pytest-cov nbstripout
    
    - name: Check notebook outputs are stripped
      run: |
        nbstripout --check notebooks/**/*.ipynb || {
          echo " Notebooks contain outputs. Run 'nbstripout notebooks/**/*.ipynb' to fix."
          exit 1
        }
    
    - name: Check code formatting with ruff
      run: |
        ruff format --check .
    
    - name: Check code formatting with black
      run: |
        black --check .
    
    - name: Check import sorting with isort
      run: |
        isort --check .
    
    - name: Lint with ruff
      run: |
        ruff check .
    
    - name: Run tests with pytest
      run: |
        pytest -q --tb=short
    
    - name: Run end-to-end tests with sample dataset
      run: |
        pytest tests/test_e2e_sample_dataset.py -v
    
    - name: Run performance profiling (quick)
      run: |
        python scripts/profile_retrieval.py --docs 100 --queries 20 --output profile_ci.json
    
    - name: Run tests with coverage
      run: |
        pytest --cov=src/lumina_memory --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: true
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      if: matrix.python-version == '3.11'
      with:
        name: performance-results
        path: profile_ci.json
